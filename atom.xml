<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>這是微醺的小天地</title>
  
  <subtitle>微醺都在這邊</subtitle>
  <link href="https://calebweixun.github.io/hex2024_mission_hexo/atom.xml" rel="self"/>
  
  <link href="https://calebweixun.github.io/hex2024_mission_hexo/"/>
  <updated>2024-05-30T07:12:50.850Z</updated>
  <id>https://calebweixun.github.io/hex2024_mission_hexo/</id>
  
  <author>
    <name>Wei Hsun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://calebweixun.github.io/hex2024_mission_hexo/2024/05/30/hello-world/"/>
    <id>https://calebweixun.github.io/hex2024_mission_hexo/2024/05/30/hello-world/</id>
    <published>2024-05-30T07:12:50.850Z</published>
    <updated>2024-05-30T07:12:50.850Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><span id="more"></span><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="Hexo" scheme="https://calebweixun.github.io/hex2024_mission_hexo/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>AD7195</title>
    <link href="https://calebweixun.github.io/hex2024_mission_hexo/2024/05/24/AD7195/"/>
    <id>https://calebweixun.github.io/hex2024_mission_hexo/2024/05/24/AD7195/</id>
    <published>2024-05-24T08:45:10.000Z</published>
    <updated>2024-05-30T07:12:50.850Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AD7195-lib-edit-from-AD7193"><a href="#AD7195-lib-edit-from-AD7193" class="headerlink" title="AD7195 (lib edit from AD7193)"></a>AD7195 (lib edit from AD7193)</h2><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本筆記使用 ESP-WROOM-32 與 EVAL-AD7195EBZ 開始進行測試與開發，程式碼基於 annem 釋出的 AD7193 進行調整並測試。以下為 AD7195 的簡介節錄：</p><span id="more"></span><blockquote><p>4.8 kHz, Ultralow Noise<br>24-Bit Sigma-Delta ADC<br>PGA and AC Excitation</p></blockquote><p>Applications：</p><p>Weigh scales<br><strong>Strain gage transducers</strong><br>Pressure measurement<br>Temperature measurement<br>Chromatography<br>PLC&#x2F;DCS analog input modules<br>Data acquisition<br>Medical and scientific instrumentation</p><blockquote></blockquote><h2 id="硬體使用"><a href="#硬體使用" class="headerlink" title="硬體使用"></a>硬體使用</h2><p>以下紀錄關於測試學習中的硬體連接線路、官方建議的相關連接方式；<br>本筆記的開發主要目標是針對 橋式電路中的 Strain Gauge 的量測。</p><h3 id="Connect-to-MCU-by-HSPI"><a href="#Connect-to-MCU-by-HSPI" class="headerlink" title="Connect to MCU by HSPI"></a>Connect to MCU by HSPI</h3><p>本次測試學習的開發板仍然採用 ESP32，雙核心的架構使我們有很好的開發彈性，再外部連接上具備了至少兩個部份的 SPI 通道可供我們使用，另外也有許多 GPIO 可進行定義使用。esp32 與 AD7195 的連線會採用 HSPI 的方式進行連接，連接腳位可以參考下表：</p><table><thead><tr><th>AD7195Pin</th><th>ESP32 Pins</th><th>備註</th></tr></thead><tbody><tr><td>CS</td><td>15</td><td>選擇 ADC，輸出 LOW，使 ADC 可以在 3 線模式下工作</td></tr><tr><td>DIN</td><td>13 (MOSI)</td><td>配置晶片訊號</td></tr><tr><td>SCLK</td><td>14 (SCLK)</td><td>通訊時脈</td></tr><tr><td>DOUT&#x2F;RDY</td><td>12 (MISO)</td><td>當轉換完成後會變成 LOW，再由此腳 SPI 傳輸數據</td></tr><tr><td>SYNC</td><td>27</td><td>拉低會使濾波器、控制節點重置</td></tr><tr><td>AVDD</td><td>5V</td><td>模擬電源電壓，4.75 V 至 5.25 V。AVDD 獨立於 DVDD。</td></tr><tr><td>DVDD</td><td>3V3</td><td>數字電源電壓，2.7 V 至 5.25 V。DVDD 獨立於 AVDD。</td></tr></tbody></table><ul><li></li></ul><h3 id="Connect-to-Bridge-sensor"><a href="#Connect-to-Bridge-sensor" class="headerlink" title="Connect to Bridge sensor"></a>Connect to Bridge sensor</h3><hr><h2 id="Software"><a href="#Software" class="headerlink" title="Software"></a>Software</h2><h3 id="寄存器－控制晶片運作與讀取數計的中繼"><a href="#寄存器－控制晶片運作與讀取數計的中繼" class="headerlink" title="寄存器－控制晶片運作與讀取數計的中繼"></a>寄存器－控制晶片運作與讀取數計的中繼</h3><p>程式中預設了寄存器對應的默認值，關於寄存器的內容表可以參考下方圖片的對應表，由於函式庫參考了 annem&#x2F;ad7193 的相關內容進行調修，故圖片中黑色的部分為 7193 的相關內容，紅色則是 7195 與其不同的部分</p><p><img src="/hex2024_mission_hexo/./images/AD7195/Untitled.png" alt="7193 vs 7195 寄存器差異  (AD7195 Datasheet - Page 17)  "></p><p>7193 vs 7195 寄存器差異 (AD7195 Datasheet - Page 17)</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*寄存器預設值*/</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> registerMap[<span class="number">4</span>] = &#123;</span><br><span class="line">  <span class="number">0x00</span>,       <span class="comment">/*狀態*/</span></span><br><span class="line">  <span class="number">0x080060</span>,   <span class="comment">/*模式*/</span></span><br><span class="line">  <span class="number">0x000117</span>,   <span class="comment">/*配置*/</span></span><br><span class="line">  <span class="number">0x000000</span>    <span class="comment">/*數據*/</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*每個寄存器的大小，spi每次讀取為 8bit 所以是 n*8bit */</span></span><br><span class="line"><span class="type">int</span> registerSize[<span class="number">8</span>] = &#123;</span><br><span class="line">  <span class="number">1</span>,  <span class="comment">/*0,狀態*/</span></span><br><span class="line">  <span class="number">3</span>,  <span class="comment">/*1,模式*/</span></span><br><span class="line">  <span class="number">3</span>,  <span class="comment">/*2,配置*/</span></span><br><span class="line">  <span class="number">3</span>,  <span class="comment">/*3,數據*/</span></span><br><span class="line">  <span class="number">1</span>,  <span class="comment">/*4,ID*/</span></span><br><span class="line">  <span class="number">1</span>,  <span class="comment">/*5,GPOCON*/</span></span><br><span class="line">  <span class="number">3</span>,  <span class="comment">/*6,失調*/</span></span><br><span class="line">  <span class="number">3</span>   <span class="comment">/*7,滿量程*/</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><table><thead><tr><th>Name</th><th>Address</th><th>Command</th><th>Reciver</th></tr></thead><tbody><tr><td>通訊</td><td>00</td><td></td><td></td></tr><tr><td>狀態</td><td>00</td><td>0100 0000</td><td>0</td></tr><tr><td>模式</td><td>01</td><td>0100 1000</td><td>1000 0000 0000 0110 0000</td></tr><tr><td>配置</td><td>02</td><td>0101 0000</td><td>0001 0001 0110</td></tr><tr><td>數據</td><td>03</td><td>0101 1000</td><td>0111 1111 1111 1101 1011 0101</td></tr><tr><td>ID</td><td>04</td><td>0110 0000</td><td>1010 0111</td></tr><tr><td>GPOCON</td><td>05</td><td></td><td></td></tr><tr><td>失調</td><td>06</td><td>0111 0000</td><td>1000 0000 0000 0000 0000 0000</td></tr><tr><td>滿量程</td><td>07</td><td>0111 1000</td><td>0101 0101 0011 1101 0000 0000</td></tr></tbody></table><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><h3 id="來源函式庫"><a href="#來源函式庫" class="headerlink" title="來源函式庫"></a>來源函式庫</h3><p><a href="https://github.com/annem/AD7193">GitHub - annem&#x2F;AD7193</a></p><p><a href="https://www.arduino.cc/reference/en/libraries/ad7193/">AD7193</a></p><h3 id="晶片文件"><a href="#晶片文件" class="headerlink" title="晶片文件"></a>晶片文件</h3><p><a href="https://www.analog.com/media/cn/technical-documentation/data-sheets/AD7195_cn.pdf"></a></p><p><a href="https://www.analog.com/media/cn/technical-documentation/data-sheets/AD7193_cn.pdf"></a></p><p><a href="https://ez.analog.com/data_converters/precision_adcs/w/documents/2849/ad7193-arduino-tutorial---thermocouple-measurements">AD7193 + Arduino Tutorial - Thermocouple measurements</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;AD7195-lib-edit-from-AD7193&quot;&gt;&lt;a href=&quot;#AD7195-lib-edit-from-AD7193&quot; class=&quot;headerlink&quot; title=&quot;AD7195 (lib edit from AD7193)&quot;&gt;&lt;/a&gt;AD7195 (lib edit from AD7193)&lt;/h2&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本筆記使用 ESP-WROOM-32 與 EVAL-AD7195EBZ 開始進行測試與開發，程式碼基於 annem 釋出的 AD7193 進行調整並測試。以下為 AD7195 的簡介節錄：&lt;/p&gt;</summary>
    
    
    
    
    <category term="AD7195" scheme="https://calebweixun.github.io/hex2024_mission_hexo/tags/AD7195/"/>
    
    <category term="ESP32" scheme="https://calebweixun.github.io/hex2024_mission_hexo/tags/ESP32/"/>
    
  </entry>
  
  <entry>
    <title>LabVIEW&amp;Python</title>
    <link href="https://calebweixun.github.io/hex2024_mission_hexo/2024/05/24/LabVIEW-Python/"/>
    <id>https://calebweixun.github.io/hex2024_mission_hexo/2024/05/24/LabVIEW-Python/</id>
    <published>2024-05-24T08:36:52.000Z</published>
    <updated>2024-05-30T07:12:50.850Z</updated>
    
    <content type="html"><![CDATA[<h2 id="pip-install"><a href="#pip-install" class="headerlink" title="pip install"></a>pip install</h2><p><a href="https://www.maxlist.xyz/2019/07/13/pip-install-python/">pip 安裝套件</a></p><h2 id="Python-Node-LabVIEW"><a href="#Python-Node-LabVIEW" class="headerlink" title="Python Node (LabVIEW)"></a>Python Node (LabVIEW)</h2><p>Python Node 是 LabVIEW 中可以直接執行 py Code 的一個方式，於執行系統中必須先安裝對應版本的 Python，並透過 pip 預先安裝所需使用的 Modules 即可。</p><span id="more"></span><p><img src="/hex2024_mission_hexo/./images/LabVIEW-Python/Untitled.png" alt="Untitled.png"></p><p>欲以 Node 執行 py 程式碼，必須於指定的 py 檔中，將程式碼以 def 的形式包成可以呼叫的狀態，並透過 return 將資料拋回 LabVIEW，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pyULE</span>(<span class="params">input_times,dir_of_folders</span>):</span><br><span class="line">    <span class="comment"># 轉換成 nparray 以供 python 使用</span></span><br><span class="line">    time_all_folder = np.array(input_times)</span><br><span class="line">    <span class="comment"># 轉換成 list 拋回 LabVIEW</span></span><br><span class="line">    rtnarray = time_all_folder.tolist()</span><br><span class="line">    <span class="keyword">return</span> rtnarray</span><br></pre></td></tr></table></figure><p>由 LabVIEW 將數據導入至 Python 時，由於 Python 自動認定導入數值為 List 型態，故須將數據先轉為 Array，以提供 python 進行數據分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 轉換成 nparray 以供 python 使用</span></span><br><span class="line">time_all_folder = np.array(input_times)</span><br></pre></td></tr></table></figure><p>最終在轉拋回 LabVIEW 時，將 npArray 轉回 List</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 轉換成 list 拋回 LabVIEW</span></span><br><span class="line">rtnarray = time_all_folder.tolist()</span><br><span class="line"><span class="keyword">return</span> rtnarray</span><br></pre></td></tr></table></figure><p>輸入後轉換在拋出，確認資料經過轉換後並沒有損失或差異。</p><p><img src="/hex2024_mission_hexo/./images/LabVIEW-Python/Untitled1.png" alt="Untitled 1"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;pip-install&quot;&gt;&lt;a href=&quot;#pip-install&quot; class=&quot;headerlink&quot; title=&quot;pip install&quot;&gt;&lt;/a&gt;pip install&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.maxlist.xyz/2019/07/13/pip-install-python/&quot;&gt;pip 安裝套件&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Python-Node-LabVIEW&quot;&gt;&lt;a href=&quot;#Python-Node-LabVIEW&quot; class=&quot;headerlink&quot; title=&quot;Python Node (LabVIEW)&quot;&gt;&lt;/a&gt;Python Node (LabVIEW)&lt;/h2&gt;&lt;p&gt;Python Node 是 LabVIEW 中可以直接執行 py Code 的一個方式，於執行系統中必須先安裝對應版本的 Python，並透過 pip 預先安裝所需使用的 Modules 即可。&lt;/p&gt;</summary>
    
    
    
    
    <category term="LabVIEW" scheme="https://calebweixun.github.io/hex2024_mission_hexo/tags/LabVIEW/"/>
    
    <category term="Python" scheme="https://calebweixun.github.io/hex2024_mission_hexo/tags/Python/"/>
    
  </entry>
  
</feed>
